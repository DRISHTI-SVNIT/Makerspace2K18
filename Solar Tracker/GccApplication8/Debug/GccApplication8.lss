
GccApplication8.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000008  00800100  0000021c  000002b0  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         0000021c  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000008  00800108  00800108  000002b8  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  000002b8  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  000002e8  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000030  00000000  00000000  00000324  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   0000096f  00000000  00000000  00000354  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000804  00000000  00000000  00000cc3  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   000002ea  00000000  00000000  000014c7  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000044  00000000  00000000  000017b4  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    0000040d  00000000  00000000  000017f8  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000021  00000000  00000000  00001c05  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000020  00000000  00000000  00001c26  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	45 c0       	rjmp	.+138    	; 0x8c <__ctors_end>
   2:	00 00       	nop
   4:	60 c0       	rjmp	.+192    	; 0xc6 <__bad_interrupt>
   6:	00 00       	nop
   8:	5e c0       	rjmp	.+188    	; 0xc6 <__bad_interrupt>
   a:	00 00       	nop
   c:	5c c0       	rjmp	.+184    	; 0xc6 <__bad_interrupt>
   e:	00 00       	nop
  10:	5a c0       	rjmp	.+180    	; 0xc6 <__bad_interrupt>
  12:	00 00       	nop
  14:	58 c0       	rjmp	.+176    	; 0xc6 <__bad_interrupt>
  16:	00 00       	nop
  18:	56 c0       	rjmp	.+172    	; 0xc6 <__bad_interrupt>
  1a:	00 00       	nop
  1c:	54 c0       	rjmp	.+168    	; 0xc6 <__bad_interrupt>
  1e:	00 00       	nop
  20:	52 c0       	rjmp	.+164    	; 0xc6 <__bad_interrupt>
  22:	00 00       	nop
  24:	50 c0       	rjmp	.+160    	; 0xc6 <__bad_interrupt>
  26:	00 00       	nop
  28:	4e c0       	rjmp	.+156    	; 0xc6 <__bad_interrupt>
  2a:	00 00       	nop
  2c:	4c c0       	rjmp	.+152    	; 0xc6 <__bad_interrupt>
  2e:	00 00       	nop
  30:	4a c0       	rjmp	.+148    	; 0xc6 <__bad_interrupt>
  32:	00 00       	nop
  34:	48 c0       	rjmp	.+144    	; 0xc6 <__bad_interrupt>
  36:	00 00       	nop
  38:	46 c0       	rjmp	.+140    	; 0xc6 <__bad_interrupt>
  3a:	00 00       	nop
  3c:	44 c0       	rjmp	.+136    	; 0xc6 <__bad_interrupt>
  3e:	00 00       	nop
  40:	42 c0       	rjmp	.+132    	; 0xc6 <__bad_interrupt>
  42:	00 00       	nop
  44:	40 c0       	rjmp	.+128    	; 0xc6 <__bad_interrupt>
  46:	00 00       	nop
  48:	3e c0       	rjmp	.+124    	; 0xc6 <__bad_interrupt>
  4a:	00 00       	nop
  4c:	3c c0       	rjmp	.+120    	; 0xc6 <__bad_interrupt>
  4e:	00 00       	nop
  50:	3a c0       	rjmp	.+116    	; 0xc6 <__bad_interrupt>
  52:	00 00       	nop
  54:	38 c0       	rjmp	.+112    	; 0xc6 <__bad_interrupt>
  56:	00 00       	nop
  58:	36 c0       	rjmp	.+108    	; 0xc6 <__bad_interrupt>
  5a:	00 00       	nop
  5c:	34 c0       	rjmp	.+104    	; 0xc6 <__bad_interrupt>
  5e:	00 00       	nop
  60:	32 c0       	rjmp	.+100    	; 0xc6 <__bad_interrupt>
  62:	00 00       	nop
  64:	30 c0       	rjmp	.+96     	; 0xc6 <__bad_interrupt>
  66:	00 00       	nop
  68:	2e c0       	rjmp	.+92     	; 0xc6 <__bad_interrupt>
  6a:	00 00       	nop
  6c:	2c c0       	rjmp	.+88     	; 0xc6 <__bad_interrupt>
  6e:	00 00       	nop
  70:	2a c0       	rjmp	.+84     	; 0xc6 <__bad_interrupt>
  72:	00 00       	nop
  74:	28 c0       	rjmp	.+80     	; 0xc6 <__bad_interrupt>
  76:	00 00       	nop
  78:	26 c0       	rjmp	.+76     	; 0xc6 <__bad_interrupt>
  7a:	00 00       	nop
  7c:	24 c0       	rjmp	.+72     	; 0xc6 <__bad_interrupt>
  7e:	00 00       	nop
  80:	22 c0       	rjmp	.+68     	; 0xc6 <__bad_interrupt>
  82:	00 00       	nop
  84:	20 c0       	rjmp	.+64     	; 0xc6 <__bad_interrupt>
  86:	00 00       	nop
  88:	1e c0       	rjmp	.+60     	; 0xc6 <__bad_interrupt>
	...

0000008c <__ctors_end>:
  8c:	11 24       	eor	r1, r1
  8e:	1f be       	out	0x3f, r1	; 63
  90:	cf ef       	ldi	r28, 0xFF	; 255
  92:	d0 e1       	ldi	r29, 0x10	; 16
  94:	de bf       	out	0x3e, r29	; 62
  96:	cd bf       	out	0x3d, r28	; 61

00000098 <__do_copy_data>:
  98:	11 e0       	ldi	r17, 0x01	; 1
  9a:	a0 e0       	ldi	r26, 0x00	; 0
  9c:	b1 e0       	ldi	r27, 0x01	; 1
  9e:	ec e1       	ldi	r30, 0x1C	; 28
  a0:	f2 e0       	ldi	r31, 0x02	; 2
  a2:	00 e0       	ldi	r16, 0x00	; 0
  a4:	0b bf       	out	0x3b, r16	; 59
  a6:	02 c0       	rjmp	.+4      	; 0xac <__do_copy_data+0x14>
  a8:	07 90       	elpm	r0, Z+
  aa:	0d 92       	st	X+, r0
  ac:	a8 30       	cpi	r26, 0x08	; 8
  ae:	b1 07       	cpc	r27, r17
  b0:	d9 f7       	brne	.-10     	; 0xa8 <__do_copy_data+0x10>

000000b2 <__do_clear_bss>:
  b2:	21 e0       	ldi	r18, 0x01	; 1
  b4:	a8 e0       	ldi	r26, 0x08	; 8
  b6:	b1 e0       	ldi	r27, 0x01	; 1
  b8:	01 c0       	rjmp	.+2      	; 0xbc <.do_clear_bss_start>

000000ba <.do_clear_bss_loop>:
  ba:	1d 92       	st	X+, r1

000000bc <.do_clear_bss_start>:
  bc:	a0 31       	cpi	r26, 0x10	; 16
  be:	b2 07       	cpc	r27, r18
  c0:	e1 f7       	brne	.-8      	; 0xba <.do_clear_bss_loop>
  c2:	15 d0       	rcall	.+42     	; 0xee <main>
  c4:	a9 c0       	rjmp	.+338    	; 0x218 <_exit>

000000c6 <__bad_interrupt>:
  c6:	9c cf       	rjmp	.-200    	; 0x0 <__vectors>

000000c8 <adc_init>:
}
}
void adc_init(void)
{
	//USART_Transmitchar('r',0);
	ADCSRA|=(1<<ADPS0)|(1<<ADPS1)|(1<<ADPS2);//|(1<<ADFR);
  c8:	86 b1       	in	r24, 0x06	; 6
  ca:	87 60       	ori	r24, 0x07	; 7
  cc:	86 b9       	out	0x06, r24	; 6
	ADMUX|=1<<REFS0;//SUPPLY 5V AT AVCC
  ce:	3e 9a       	sbi	0x07, 6	; 7
	ADCSRA|=1<<ADEN;
  d0:	37 9a       	sbi	0x06, 7	; 6
	ADCSRA|=1<<ADSC;
  d2:	36 9a       	sbi	0x06, 6	; 6
  d4:	08 95       	ret

000000d6 <adc_read>:
}

uint16_t adc_read(uint8_t channel)
{
	
	ADMUX&=0xF0;
  d6:	97 b1       	in	r25, 0x07	; 7
  d8:	90 7f       	andi	r25, 0xF0	; 240
  da:	97 b9       	out	0x07, r25	; 7
	ADMUX|=channel;																										;
  dc:	97 b1       	in	r25, 0x07	; 7
  de:	89 2b       	or	r24, r25
  e0:	87 b9       	out	0x07, r24	; 7
	ADCSRA|=1<<ADSC;
  e2:	36 9a       	sbi	0x06, 6	; 6
	//USART_Transmitchar('g',0);
	while(ADCSRA&(1<<ADSC));
  e4:	36 99       	sbic	0x06, 6	; 6
  e6:	fe cf       	rjmp	.-4      	; 0xe4 <adc_read+0xe>
	//USART_Transmitchar('f',0);
	return ADCW;
  e8:	84 b1       	in	r24, 0x04	; 4
  ea:	95 b1       	in	r25, 0x05	; 5
}
  ec:	08 95       	ret

000000ee <main>:
uint8_t hault1 = 0b11000000; 
uint8_t hault2 = 0b00110000; 
uint8_t reference = 50;
int main(void)
{
	DDRD=0b11111111;
  ee:	8f ef       	ldi	r24, 0xFF	; 255
  f0:	81 bb       	out	0x11, r24	; 17
	//USART_Init(51,0);
	adc_init();		
  f2:	ea df       	rcall	.-44     	; 0xc8 <adc_init>
// 		USART_TransmitNumber(d2,0);
// 		USART_TransmitNumber(d3,0);

	while (1) 
    {
		d1=0;
  f4:	10 92 0f 01 	sts	0x010F, r1	; 0x80010f <d1+0x1>
  f8:	10 92 0e 01 	sts	0x010E, r1	; 0x80010e <d1>
		d2=0;
  fc:	10 92 0d 01 	sts	0x010D, r1	; 0x80010d <d2+0x1>
 100:	10 92 0c 01 	sts	0x010C, r1	; 0x80010c <d2>
		d3=0;
 104:	10 92 0b 01 	sts	0x010B, r1	; 0x80010b <d3+0x1>
 108:	10 92 0a 01 	sts	0x010A, r1	; 0x80010a <d3>
		d4=0;
 10c:	10 92 09 01 	sts	0x0109, r1	; 0x800109 <__data_end+0x1>
 110:	10 92 08 01 	sts	0x0108, r1	; 0x800108 <__data_end>
//		PORTD=0b00000000;
		d1=adc_read(1);
 114:	81 e0       	ldi	r24, 0x01	; 1
 116:	df df       	rcall	.-66     	; 0xd6 <adc_read>
 118:	90 93 0f 01 	sts	0x010F, r25	; 0x80010f <d1+0x1>
 11c:	80 93 0e 01 	sts	0x010E, r24	; 0x80010e <d1>
	//	USART_Transmitchar('a',0);
		//USART_TransmitNumber(d1,0);
		d2=adc_read(2);
 120:	82 e0       	ldi	r24, 0x02	; 2
 122:	d9 df       	rcall	.-78     	; 0xd6 <adc_read>
 124:	90 93 0d 01 	sts	0x010D, r25	; 0x80010d <d2+0x1>
 128:	80 93 0c 01 	sts	0x010C, r24	; 0x80010c <d2>
		//USART_Transmitchar('b',0);
		//USART_TransmitNumber(d2,0);
		d3=adc_read(3);
 12c:	83 e0       	ldi	r24, 0x03	; 3
 12e:	d3 df       	rcall	.-90     	; 0xd6 <adc_read>
 130:	90 93 0b 01 	sts	0x010B, r25	; 0x80010b <d3+0x1>
 134:	80 93 0a 01 	sts	0x010A, r24	; 0x80010a <d3>
		//USART_Transmitchar('c',0);
		//USART_TransmitNumber(d3,0);
		d4=adc_read(4);
 138:	84 e0       	ldi	r24, 0x04	; 4
 13a:	cd df       	rcall	.-102    	; 0xd6 <adc_read>
 13c:	90 93 09 01 	sts	0x0109, r25	; 0x800109 <__data_end+0x1>
 140:	80 93 08 01 	sts	0x0108, r24	; 0x800108 <__data_end>
 144:	20 91 0e 01 	lds	r18, 0x010E	; 0x80010e <d1>
		//USART_Transmitchar('d',0);
		//USART_TransmitNumber(d4,0);
			//USART_TransmitNumber(d0,0);
	

	if(d1-d2>reference)
 148:	30 91 0f 01 	lds	r19, 0x010F	; 0x80010f <d1+0x1>
 14c:	80 91 0c 01 	lds	r24, 0x010C	; 0x80010c <d2>
 150:	90 91 0d 01 	lds	r25, 0x010D	; 0x80010d <d2+0x1>
 154:	28 1b       	sub	r18, r24
 156:	39 0b       	sbc	r19, r25
 158:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__data_start>
 15c:	90 e0       	ldi	r25, 0x00	; 0
 15e:	82 17       	cp	r24, r18
 160:	93 07       	cpc	r25, r19
 162:	18 f4       	brcc	.+6      	; 0x16a <main+0x7c>
 164:	80 91 06 01 	lds	r24, 0x0106	; 0x800106 <direction1>
	{	
		PORTD=direction1;
 168:	82 bb       	out	0x12, r24	; 18
 16a:	20 91 0c 01 	lds	r18, 0x010C	; 0x80010c <d2>
    }	
	if(d2-d1>reference)
 16e:	30 91 0d 01 	lds	r19, 0x010D	; 0x80010d <d2+0x1>
 172:	80 91 0e 01 	lds	r24, 0x010E	; 0x80010e <d1>
 176:	90 91 0f 01 	lds	r25, 0x010F	; 0x80010f <d1+0x1>
 17a:	28 1b       	sub	r18, r24
 17c:	39 0b       	sbc	r19, r25
 17e:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__data_start>
 182:	90 e0       	ldi	r25, 0x00	; 0
 184:	82 17       	cp	r24, r18
 186:	93 07       	cpc	r25, r19
 188:	18 f4       	brcc	.+6      	; 0x190 <main+0xa2>
 18a:	80 91 05 01 	lds	r24, 0x0105	; 0x800105 <direction2>
	{
		PORTD=direction2;
 18e:	82 bb       	out	0x12, r24	; 18
 190:	20 91 0a 01 	lds	r18, 0x010A	; 0x80010a <d3>
	}

	if(d3-d4>reference)
 194:	30 91 0b 01 	lds	r19, 0x010B	; 0x80010b <d3+0x1>
 198:	80 91 08 01 	lds	r24, 0x0108	; 0x800108 <__data_end>
 19c:	90 91 09 01 	lds	r25, 0x0109	; 0x800109 <__data_end+0x1>
 1a0:	28 1b       	sub	r18, r24
 1a2:	39 0b       	sbc	r19, r25
 1a4:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__data_start>
 1a8:	90 e0       	ldi	r25, 0x00	; 0
 1aa:	82 17       	cp	r24, r18
 1ac:	93 07       	cpc	r25, r19
 1ae:	18 f4       	brcc	.+6      	; 0x1b6 <main+0xc8>
 1b0:	80 91 04 01 	lds	r24, 0x0104	; 0x800104 <direction3>
	{
		PORTD=direction3;
 1b4:	82 bb       	out	0x12, r24	; 18
 1b6:	20 91 08 01 	lds	r18, 0x0108	; 0x800108 <__data_end>
	}
	if(d4-d3>reference)
 1ba:	30 91 09 01 	lds	r19, 0x0109	; 0x800109 <__data_end+0x1>
 1be:	80 91 0a 01 	lds	r24, 0x010A	; 0x80010a <d3>
 1c2:	90 91 0b 01 	lds	r25, 0x010B	; 0x80010b <d3+0x1>
 1c6:	28 1b       	sub	r18, r24
 1c8:	39 0b       	sbc	r19, r25
 1ca:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__data_start>
 1ce:	90 e0       	ldi	r25, 0x00	; 0
 1d0:	82 17       	cp	r24, r18
 1d2:	93 07       	cpc	r25, r19
 1d4:	18 f4       	brcc	.+6      	; 0x1dc <main+0xee>
 1d6:	80 91 03 01 	lds	r24, 0x0103	; 0x800103 <direction4>
	{
		PORTD=direction4;
 1da:	82 bb       	out	0x12, r24	; 18
 1dc:	20 91 0e 01 	lds	r18, 0x010E	; 0x80010e <d1>
	}
	if(d1==d2)
 1e0:	30 91 0f 01 	lds	r19, 0x010F	; 0x80010f <d1+0x1>
 1e4:	80 91 0c 01 	lds	r24, 0x010C	; 0x80010c <d2>
 1e8:	90 91 0d 01 	lds	r25, 0x010D	; 0x80010d <d2+0x1>
 1ec:	28 17       	cp	r18, r24
 1ee:	39 07       	cpc	r19, r25
 1f0:	19 f4       	brne	.+6      	; 0x1f8 <main+0x10a>
 1f2:	80 91 02 01 	lds	r24, 0x0102	; 0x800102 <hault1>
	{
		PORTD=hault1;
 1f6:	82 bb       	out	0x12, r24	; 18
 1f8:	20 91 0a 01 	lds	r18, 0x010A	; 0x80010a <d3>
	}
	
	if(d3==d4)
 1fc:	30 91 0b 01 	lds	r19, 0x010B	; 0x80010b <d3+0x1>
 200:	80 91 08 01 	lds	r24, 0x0108	; 0x800108 <__data_end>
 204:	90 91 09 01 	lds	r25, 0x0109	; 0x800109 <__data_end+0x1>
 208:	28 17       	cp	r18, r24
 20a:	39 07       	cpc	r19, r25
 20c:	09 f0       	breq	.+2      	; 0x210 <main+0x122>
 20e:	72 cf       	rjmp	.-284    	; 0xf4 <main+0x6>
 210:	80 91 01 01 	lds	r24, 0x0101	; 0x800101 <hault2>
	{
		PORTD=hault2;
 214:	82 bb       	out	0x12, r24	; 18
 216:	6e cf       	rjmp	.-292    	; 0xf4 <main+0x6>

00000218 <_exit>:
 218:	f8 94       	cli

0000021a <__stop_program>:
 21a:	ff cf       	rjmp	.-2      	; 0x21a <__stop_program>
